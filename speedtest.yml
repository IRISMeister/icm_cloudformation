AWSTemplateFormatVersion: 2010-09-09
Metadata:
  Author: https://github.com/IRISMeister
  Last Updated: November 24, 2020
  Description: ICM launcher
Description: >-
  Launch SpeedTest Demo from within provisioned EC2 instance.
Parameters:
  SSHLocationParameter:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  IamInstanceProfileParameter:
    Description: IAM instance role for ICM + s3:read
    Type: String
  InstanceSecurityGroupParameter:
    Description:  Security group for the instance
    Type: AWS::EC2::SecurityGroup::Id
  SubnetIdParameter:
    Description:  SubnetId
    Type: AWS::EC2::Subnet::Id
  KeyNameParameter:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceTypeParameter:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    ConstraintDescription: must be a valid EC2 instance type.
  LatestAmiIdParameter:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  WRCUserParameter:
    Type: String
  WRCTokenParameter:
    Description: Leave it empty. Don't use this yet. Token for container registry server. 
    Type: String
    NoEcho: true
  ICMKitVersionParameter:
    Description: ICM Kit version
    Type: String
    Default: 2020.1.0.215.0
    AllowedValues:
      - 2019.1.1.615.1
      - 2020.1.0.215.0
      - 2020.2.0.211.0
      - 2020.3.0.221.0
Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags:
      - Key: Name
        Value: !Ref WRCUserParameter
      SubnetId: !Ref SubnetIdParameter
      InstanceType: !Ref InstanceTypeParameter
      IamInstanceProfile: !Ref IamInstanceProfileParameter
      SecurityGroupIds:
        - !Ref InstanceSecurityGroupParameter
      KeyName: !Ref KeyNameParameter
      ImageId: !Ref LatestAmiIdParameter
      UserData:
        Fn::Base64:
         Fn::Sub:
         - |
           #!/usr/bin/env bash
           yum -y update
           yum install -y git
           yum install jq -y
           yum install -y docker
           systemctl start docker
           usermod -a -G docker ec2-user
           docker login -u="${WRCUser}" -p="${WRCToken}" containers.intersystems.com
           docker pull containers.intersystems.com/intersystems/icm:${ICMKitVersion}
           region=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed -e 's/.$//')
           targetdir=/home/ec2-user
           s3bucket=my-bucket

           mkdir $targetdir/.aws
           touch $targetdir/.aws/credentials
           echo "[default]" > $targetdir/.aws/config
           echo "region = $region" >> $targetdir/.aws/config
           chown -R ec2-user:ec2-user $targetdir/.aws
           #
           git clone https://github.com/IRISMeister/irisdemo-demo-htap.git $targetdir/irisdemo-demo-htap
           aws s3 cp s3://$s3bucket/iris.key $targetdir/irisdemo-demo-htap/ICM/ICMDurable/license
           aws s3 cp s3://$s3bucket/IRIS-${ICMKitVersion}-lnxubuntux64.tar.gz $targetdir/irisdemo-demo-htap/ICM/ICMDurable/IRISKit
           cp /home/ec2-user/.aws/credentials $targetdir/irisdemo-demo-htap/ICM/ICMDurable/aws.credentials
           chown -R ec2-user:ec2-user $targetdir/irisdemo-demo-htap
         - {
           WRCUser: !Ref WRCUserParameter,
           WRCToken: !Ref WRCTokenParameter,
           ICMKitVersion: !Ref ICMKitVersionParameter
           }
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt 
      - EC2Instance
      - PublicDnsName
